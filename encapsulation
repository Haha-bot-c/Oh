using System;

interface IDamage
{
    int GetDamage();
}

class Weapon
{
    private IDamage _damage;
    private int _bullets;

    public Weapon(IDamage damage, int bullets)
    {
        _damage = damage;
        _bullets = bullets;
    }

    public void Fire(Player player)
    {
        if (_bullets > 0)
        {
            player.TakeDamage(_damage);
            _bullets--;
        }
    }
}

class Player
{
    const int MaxHealth = 100;
    const int MinHealth = 0;

    private int _health;

    public int Health
    {
        get { return _health; }
        set { _health = Math.Max(MinHealth, Math.Min(MaxHealth, value)); } 
    }

    public Player(int health)
    {
        Health = health;
    }

    public void TakeDamage(IDamage damage)
    {
        if (Health > 0)
        {
            Health -= damage.GetDamage(); 
        }
    }
}


class Bot
{
    private Weapon _weapon;

    public Bot(Weapon weapon)
    {
        _weapon = weapon;
    }

    public void OnSeePlayer(Player player)
    {
        if (_weapon != null)
        {
            _weapon.Fire(player);
        }
    }
}

class Damage : IDamage
{
    private uint _damage;

    public Damage(uint damage)
    {
        _damage = damage;
    }

    public int GetDamage()
    {
        return (int)_damage;
    }
}
